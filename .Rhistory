code <- "UHWBKDSXRJMFEDXVXWWJYWHXKOAZVHIUOEJTPOZUIVYZE"
shiny::runApp()
# code <- list.files(file.path("output"))
# code <- list.files(file.path("output"))
code <- list.files(file.path("output"))
code
code <- "DQICXPANRHSJYKWAORUKFCVFTCNDIATTTKPFJGTMRUTPO"
request <- readRDS(file.path("output", code, "request.rds"))
email <- request$email
dirname <- request$dirname
term <- request$term
retmax <- 10000
year <- request$year
force <- request$force
nAuthors <- 100
force
force != ""
#!/usr/bin/env Rscript
args = commandArgs(trailingOnly=TRUE)
source ("basicFunctions.R")
source ("auth.R")
library(mailR)
if(force != ""){
force <- strsplit(force, ",")[[1]]
for(i in 1:length(force)){
force[i] <- trimws(force[i])
}
}
#Get PUBMED results ------
search_results <- makeQuery(term, year, retmax)
for(i in 1:length(force)){
termp <- paste(term, "AND", force[i], sep=" ")
search_results <- c(search_results, makeQuery(termp, year, retmax))
}
search_results <- unique(search_results)
files <- fetchSearchResults(search_results)
search_results
search_results
term
year
retmax
search_results <- makeQuery(term, year, retmax)
if(force != ""){
for(i in 1:length(force)){
termp <- paste(term, "AND", force[i], sep=" ")
search_results <- c(search_results, makeQuery(termp, year, retmax))
}
}
search_results <- unique(search_results)
files <- fetchSearchResults(search_results)
search_results
search_results <- makeQuery(term, year, retmax)
search_results
types<- c("Journal Article", "Letter")
typesQuery <- paste(types, collapse="[pt] OR ")
typesQuery <- paste(typesQuery, "[pt]", sep="")
query <- paste(term, " AND (", typesQuery,")", sep="")
query <- paste(query, "AND (", year, "[Publication Date])")
search_results <- entrez_search(db = "pubmed", term = query, retmax=retmax, use_history = T)
message("Querying: ", query)
search_results
email
email <- msconstante@gmail.com
email <- "msconstante@gmail.com"
source ("basicFunctions.R")
source ("auth.R")
email
myCodeMail(term, code, email)
myCodeMail<- function(term, code, email){
send.mail(from = "info@fuzzyowl.ca",
to = email,
subject = paste("Your ResearcherNavigator search"),
body = paste("Search:",term, "\nCode:", code, "\n\n",
"Access your results at: http://fuzzyowl.ca:3838\n",
"If you enjoy the service, please consider making a donation at: https://www.paypal.com/donate/?hosted_button_id=BZE87CUSS2JEY"),
smtp = list(host.name = "smtppro.zoho.com", port = 465,
user.name = "info@fuzzyowl.ca",
passwd = "fuzzyS3gur4nc4", ssl = TRUE),
authenticate = TRUE,
send = TRUE)
}
myCodeMail(term, code, email)
myCodeMail(term, code, email)
makeQuery <- function(term, year, retmax){
types<- c("Journal Article", "Letter")
typesQuery <- paste(types, collapse="[pt] OR ")
typesQuery <- paste(typesQuery, "[pt]", sep="")
query <- paste(term, " AND (", typesQuery,")", sep="")
query <- paste(query, "AND (", year, "[Publication Date])")
search_results <- entrez_search(db = "pubmed", term = query, retmax=retmax, use_history = T)
message("Querying: ", query)
return(search_results[[1]])
}
myCodeMail(term, code, email)
source ("basicFunctions.R")
source ("auth.R")
myCodeMail(term, code, email)
source("basicFunctions.R")
code  <- make.names(paste(date, randomCode()))
code  <- make.names(paste(date(), randomCode()))
code
code  <- make.names(paste(date(), randomCode()))
code
